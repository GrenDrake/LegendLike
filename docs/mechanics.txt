

enum class DamageType {
    Physical,
    Cold,
    Fire,
    Electric,
};

const int STAT_COUNT = 6;
enum class Stat {
    Speed, Health, Accuracy, Evasion, DR, DB,
};

struct CreatureType {
    double speed            = 1.0;  // action time = base time * (1 / speed)
    int health              = 10;
    int evade               = 5;    // base chance to evade attack
    int damage_reduction    = 0;    // amount removed from all incoming attacks
    int damage_bonus        = 0;    // bonus damage added to all attacks
    double resistance[];    = 1.0;  // incoming damage is multiplied by the corrisponding resistance value
    Traits[];
    Equipment[];


    int getStat(stat) {
        value = base_value [speed/health/etc];
        for (trait : traits)   value += trait.getStatMod(stat);
        for (item : equipment) value += item.getStatMod(stat);
    }
    double getResistance(damageType) {
        value = resitance[damageType];
        for (trait : traits)   value += trait.getResistance(stat);
        for (item : equipment) value += item.getResistance(stat);
    }
}

CreatureTrait {

    int getMod(forStat);
    grantedAttacks
}


Creature {
    BaseType: CreatureType;

}


Making an attack
    hits if: rand(100) < attack.accuracy - target.evade
    damage:  (attack.damage + attacker.bonus_damage - target.damage_reduction) * target.resistance




AttackType {
    ident           unique identifier
    base_accuracy   base chance to hit target in range as percent (default 100)
    double speed    how long in game time the attack takes to occur
    Type :
        self        target user only
        melee       target one adajent tile
        melee4way   target all adacent tiles
        ranged      target in straight line, stopped by creatures or obstacles
        lobbed      target in straight line, bypasses creatures or obstacles
    min_range       cannot attack targets closer than this
    max_range       cannot attack targets further than this
    damage          amount of damage caused to targets
    damage_size     radius/edge length for damaged area
    damage_shape    see below
    damage_type     elemental type of damage
}

  SQUARE  CIRCLE  LONG  WIDE
    @       @      @     @
0:  *       *      *     *

    @       @      @     @
1: ***      *      *     **
1: ***     ***     *
1: ***      *

    @       @      @     @
2: *****    *      *    ***
2: *****   ***     *
2: *****  *****    *
2: *****   ***
2: *****    *



@ = player, ~ = possible target, * = damaged_tile
###########
#.........#
#....~....#
#...~@~...#
#....~....#
#.........#
###########




